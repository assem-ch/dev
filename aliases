# Docker based shortcuts

## deployments
cap () {
  docker run --rm -ti -v $(pwd):/src -v ~/.ssh/:/ssh cap
}

## ngrok
ngrok () {
  docker run --rm -ti --name ngrok -e HTTP_PORT=$@ ngrok
}

## playground
play () {
  docker run --net=host --rm -ti --name play play
}

# Personal shortcuts

## Countdown!
countdown () {
  secs=$@
  while [ $secs -gt 0 ]; do
     echo -n "$secs \r"
     sleep 1
     secs=$((secs - 1))
  done
}

## Cleans docker images / containers
## to prevent them from eating ton
## of space
docker-clean() {
  echo 'Removing exited containers'
  docker rm $(docker ps -f=status=exited -a -q)
  echo 'Removing dangling images'
  docker rmi `docker images -qf 'dangling=true'`
}

## Get a list of packages that I pesonally installed
get-installed-stuff () {
  echo "You have this stuff installed: \n"
  comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u) | awk {'print  $0'}
  echo "\nIf you wish to install these packages:\n"
  echo "sudo apt-get install -y \\" && comm -23 <(apt-mark showmanual | sort -u) <(gzip -dc /var/log/installer/initial-status.gz | sed -n 's/^Package: //p' | sort -u) | awk {'print  $0 " \\"'}
}

## Print but logs the current date and time
p () {
	echo -n `date` && echo " $@"
}

## open the atom editor in cwd
alias atm="atom ."

## run odino.org locally
alias blog="cd ~/projects/odino.github.com && fig run --service-ports web"

## launch the local instance of mysql
## through the namshi/mysql image
alias mysql-server="docker run -ti -e importdb=no -v ~/local/namshi/mysql:/var/lib/mysql -p 3306:3306 namshi/mysql"

## connect to the local instance of mysql
## through the namshi/mysql image
alias mysql-local="mysql -u root -proot -h 127.0.0.1;"

## because fuck docker-compose, it's
## too long to type
alias fig='docker-compose'

## git-based aliases
alias st='git status'
alias reset="git reset --hard"
alias ck="git checkout $1"
alias fetch="git fetch"
alias master="git checkout master"

push (){
  git push --set-upstream origin `git symbolic-ref --short HEAD`
}

merge (){
	git merge --no-ff --no-edit "$@"
}
## rebase a specific git branch
## from master
rebase (){
    ck "$@" && git pull --rebase && master && git pull --rebase && ck "$@" && rebm
}
